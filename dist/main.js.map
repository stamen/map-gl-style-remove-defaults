{"mappings":";;;;;;;ACAA;AAEA,MAAMG,0CAAoB,GAAG,CAACC,KAAD,EAAQC,eAAR,GAA4B;IACvD,OAAOC,MAAM,CAACC,WAAP,CACLD,MAAM,CAACE,OAAP,CAAeJ,KAAf,CAAA,CACGK,MADH,CACU,CAAA,IAAA,GAAkB;QAAA,IAAjB,CAACC,GAAD,EAAMC,KAAN,CAAiB,GAAA,IAAA,AAAA;QACxB,IAAI,CAACN,eAAe,CAACO,cAAhB,CAA+BF,GAA/B,CAAL,EAA0C,OAAO,IAAP,CAA1C;QACA,OAAOC,KAAK,KAAKN,eAAe,CAACK,GAAD,CAAf,CAAqBG,OAAtC,CAAA;KAHJ,CADK,CAAP,CAKK;CANP,AAQC;AAED,MAAMC,yCAAmB,GAAGC,CAAAA,KAAK,GAAI;IACnC,MAAMC,QAAQ,GAAGb,0CAAoB,CAACY,KAAD,EAAQb,CAAAA,GAAAA,qCAAS,CAAA,CAAC,OAAD,CAAjB,CAArC,AAAA;IAEA,IAAIa,KAAK,CAACE,MAAV,EACED,QAAQ,CAACC,MAAT,GAAkBd,0CAAoB,CACpCY,KAAK,CAACE,MAD8B,EAEpCf,CAAAA,GAAAA,qCAAS,CAAA,CAAE,CAAA,OAAA,EAASa,KAAK,CAACG,IAAK,CAAA,CAAtB,CAF2B,CAAtC,CAAAF;IAMF,IAAID,KAAK,CAACI,KAAV,EACEH,QAAQ,CAACG,KAAT,GAAiBhB,0CAAoB,CACnCY,KAAK,CAACI,KAD6B,EAEnCjB,CAAAA,GAAAA,qCAAS,CAAA,CAAE,CAAA,MAAA,EAAQa,KAAK,CAACG,IAAK,CAAA,CAArB,CAF0B,CAArC,CAAAF;IAMF,OAAOA,QAAP,CAAA;CAjBF,AAkBC;AAED,MAAMI,wCAAkB,GAAGC,CAAAA,MAAM,GAAI;IACnC,OAAOlB,0CAAoB,CAACkB,MAAD,EAASnB,CAAAA,GAAAA,qCAAS,CAAA,CAAC,OAAD,CAAlB,CAA3B,CAAA;CADF,AAEC;AAED,MAAMoB,0CAAoB,GAAGD,CAAAA,MAAM,GAAI;IACrC,OAAOlB,0CAAoB,CAACkB,MAAD,EAASnB,CAAAA,GAAAA,qCAAS,CAAA,CAAE,CAAA,OAAA,EAASmB,MAAM,CAACH,IAAK,CAAA,CAAvB,CAAlB,CAA3B,CAAA;CADF,AAEC;IAED,wCAgBC,GAhBcK,CAAAA,KAAK,GAAI;IACtB,MAAMC,QAAQ,GAAGJ,wCAAkB,CAACG,KAAD,CAAnC,AAAA;IAEA,IAAIA,KAAK,CAACE,MAAV,EACED,QAAQ,CAACC,MAAT,GAAkBF,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiBZ,yCAAjB,CAAlB,CAAAU;IAGF,IAAID,KAAK,CAACI,OAAV,EACEH,QAAQ,CAACG,OAAT,GAAmBrB,MAAM,CAACC,WAAP,CACjBD,MAAM,CAACE,OAAP,CAAee,KAAK,CAACI,OAArB,CAAA,CAA8BD,GAA9B,CAAkC,CAAA,KAAA,GAAmB;QAAA,IAAlB,CAACE,IAAD,EAAOjB,KAAP,CAAkB,GAAA,KAAA,AAAA;QACnD,OAAO;YAACiB,IAAD;YAAON,0CAAoB,CAACX,KAAD,CAA3B;SAAP,CAAA;KADF,CADiB,CAAnB,CAGG;IAIL,OAAOa,QAAP,CAAA;CAfF;;ADxCA","sources":["src/index.js","src/lib/remove-defaults.js"],"sourcesContent":["import removeDefaults from \"./lib/remove-defaults\";\n\nexport { removeDefaults };\n","import { latest as reference } from \"@mapbox/mapbox-gl-style-spec\";\n\nconst removeObjectDefaults = (input, objectReference) => {\n  return Object.fromEntries(\n    Object.entries(input)\n      .filter(([key, value]) => {\n        if (!objectReference.hasOwnProperty(key)) return true;\n        return value !== objectReference[key].default;\n      })\n  );\n};\n\nconst removeLayerDefaults = layer => {\n  const newLayer = removeObjectDefaults(layer, reference['layer']);\n\n  if (layer.layout) {\n    newLayer.layout = removeObjectDefaults(\n      layer.layout,\n      reference[`layout_${layer.type}`]\n    );\n  }\n\n  if (layer.paint) {\n    newLayer.paint = removeObjectDefaults(\n      layer.paint,\n      reference[`paint_${layer.type}`]\n    );\n  }\n\n  return newLayer;\n}\n\nconst removeRootDefaults = source => {\n  return removeObjectDefaults(source, reference['$root']);\n};\n\nconst removeSourceDefaults = source => {\n  return removeObjectDefaults(source, reference[`source_${source.type}`]);\n};\n\nexport default style => {\n  const newStyle = removeRootDefaults(style);\n\n  if (style.layers) {\n    newStyle.layers = style.layers.map(removeLayerDefaults);\n  }\n\n  if (style.sources) {\n    newStyle.sources = Object.fromEntries(\n      Object.entries(style.sources).map(([name, value]) => {\n        return [name, removeSourceDefaults(value)];\n      })\n    );\n  }\n\n  return newStyle;\n};\n"],"names":["removeDefaults","latest","reference","removeObjectDefaults","input","objectReference","Object","fromEntries","entries","filter","key","value","hasOwnProperty","default","removeLayerDefaults","layer","newLayer","layout","type","paint","removeRootDefaults","source","removeSourceDefaults","style","newStyle","layers","map","sources","name"],"version":3,"file":"main.js.map"}