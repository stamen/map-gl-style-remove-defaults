{"mappings":";;ACAA;AAEA,MAAMG,6CAAuB,CAACC,OAAOC,kBAAoB;IACvD,OAAOC,OAAOC,WAAP,CACLD,OAAOE,OAAP,CAAeJ,OAAOK,MAAtB,CAA6B,CAAA,OAAkB;QAAA,IAAjB,CAACC,KAAKC,MAAW,GAAA;QAC7C,IAAI,CAACN,gBAAgBO,cAAhB,CAA+BF,MAAM,OAAO,IAAP;QAC1C,OAAOC,UAAUN,eAAe,CAACK,IAAhB,CAAqBG,OAAtC;IACD;AAEJ;AAED,MAAMC,4CAAsBC,CAAAA,QAAS;IACnC,MAAMC,WAAWb,2CAAqBY,OAAOb,CAAAA,GAAAA,aAAAA,CAAS,CAAC,QAAlB;IAErC,IAAIa,MAAME,MAAV,EACED,SAASC,MAAT,GAAkBd,2CAChBY,MAAME,MAD8B,EAEpCf,CAAAA,GAAAA,aAAAA,CAAS,CAAE,CAAA,OAAA,EAASa,MAAMG,IAAK,CAAA,CAAtB,CAF2B;IAMxC,IAAIH,MAAMI,KAAV,EACEH,SAASG,KAAT,GAAiBhB,2CACfY,MAAMI,KAD6B,EAEnCjB,CAAAA,GAAAA,aAAAA,CAAS,CAAE,CAAA,MAAA,EAAQa,MAAMG,IAAK,CAAA,CAArB,CAF0B;IAMvC,OAAOF;AACR;AAED,MAAMI,2CAAqBC,CAAAA,SAAU;IACnC,OAAOlB,2CAAqBkB,QAAQnB,CAAAA,GAAAA,aAAAA,CAAS,CAAC,QAAnB;AAC5B;AAED,MAAMoB,6CAAuBD,CAAAA,SAAU;IACrC,IAAIE,aAAaF,OAAOH,IAAxB,EACA,+DADA;IAEA,IAAIK,eAAe,cACjBA,aAAa;IAEf,OAAOpB,2CAAqBkB,QAAQnB,CAAAA,GAAAA,aAAS,AAATA,CAAS,CAAE,CAAA,OAAA,EAASqB,WAAW,CAAtB,CAAlB;AAC5B;IAED,2CAAeC,CAAAA,QAAS;IACtB,MAAMC,WAAWL,yCAAmBI;IAEpC,IAAIA,MAAME,MAAV,EACED,SAASC,MAAT,GAAkBF,MAAME,MAAN,CAAaC,GAAb,CAAiBb;IAGrC,IAAIU,MAAMI,OAAV,EACEH,SAASG,OAAT,GAAmBtB,OAAOC,WAAP,CACjBD,OAAOE,OAAP,CAAegB,MAAMI,OAArB,EAA8BD,GAA9B,CAAkC,CAAA,QAAmB;QAAA,IAAlB,CAACE,MAAMlB,MAAW,GAAA;QACnD,OAAO;YAACkB;YAAMP,2CAAqBX;SAAnC;IACD;IAIL,OAAOc;AACR;;AD5DD","sources":["src/index.js","src/lib/remove-defaults.js"],"sourcesContent":["import removeDefaults from \"./lib/remove-defaults\";\n\nexport { removeDefaults };\n","import { latest as reference } from '@mapbox/mapbox-gl-style-spec';\n\nconst removeObjectDefaults = (input, objectReference) => {\n  return Object.fromEntries(\n    Object.entries(input).filter(([key, value]) => {\n      if (!objectReference.hasOwnProperty(key)) return true;\n      return value !== objectReference[key].default;\n    })\n  );\n};\n\nconst removeLayerDefaults = layer => {\n  const newLayer = removeObjectDefaults(layer, reference['layer']);\n\n  if (layer.layout) {\n    newLayer.layout = removeObjectDefaults(\n      layer.layout,\n      reference[`layout_${layer.type}`]\n    );\n  }\n\n  if (layer.paint) {\n    newLayer.paint = removeObjectDefaults(\n      layer.paint,\n      reference[`paint_${layer.type}`]\n    );\n  }\n\n  return newLayer;\n};\n\nconst removeRootDefaults = source => {\n  return removeObjectDefaults(source, reference['$root']);\n};\n\nconst removeSourceDefaults = source => {\n  let sourceType = source.type;\n  // Handle raster-dem exception due to its key in the style spec\n  if (sourceType === 'raster-dem') {\n    sourceType = 'raster_dem';\n  }\n  return removeObjectDefaults(source, reference[`source_${sourceType}`]);\n};\n\nexport default style => {\n  const newStyle = removeRootDefaults(style);\n\n  if (style.layers) {\n    newStyle.layers = style.layers.map(removeLayerDefaults);\n  }\n\n  if (style.sources) {\n    newStyle.sources = Object.fromEntries(\n      Object.entries(style.sources).map(([name, value]) => {\n        return [name, removeSourceDefaults(value)];\n      })\n    );\n  }\n\n  return newStyle;\n};\n"],"names":["removeDefaults","latest","reference","removeObjectDefaults","input","objectReference","Object","fromEntries","entries","filter","key","value","hasOwnProperty","default","removeLayerDefaults","layer","newLayer","layout","type","paint","removeRootDefaults","source","removeSourceDefaults","sourceType","style","newStyle","layers","map","sources","name"],"version":3,"file":"module.js.map","sourceRoot":"../"}